                                                         #
Description           :       This bash script validates the feed file sizes post updated to Destination EE/WRP 
Parameters            :       Files list with sizes generated by batch run in windows post transfer completed   
        
export DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )" ;

compare_file ()
{
        filelist=` echo $1 `
        filelist1=$DIR/$filelist
        dos2unix -q  $filelist1
        sed -i '/folder/d' $filelist1
        sed -i '/^$/d' $filelist1

        while read line || [[ -n "$line" ]]
        do
                FILENAME=` echo $line | awk -F "/" '{print $NF}'`
                FILESIZE=$(stat -c%s "$line")
				FILETIME=$(stat -c%Y "$line")
                echo "$FILENAME|$FILESIZE|FILETIME "
        done < $DIR/tempfile.txt > $DIR/feedfilelist.txt

        if [ "$filelist" == "ee_filelist.txt" ]; then
                echo -e "\nCompare Results for EE files"
        fi
        if [ "$filelist" == "wrp_filelist.txt" ]; then
                echo -e "\nCompare Results for WRP files"
        fi

    printf "\n======================================================================================================================" | tee -a $logfile
    printf "\n%-70s %-15s %-15s "  "FileName" "SourcefileSize" "Remark"  | tee -a $logfile
    printf "\n======================================================================================================================" | tee -a $logfile

        while read line || [[ -n "$line" ]]
        do
                filetochk=`echo $line | cut -d'|' -f1`
                filesize1=`echo $line | cut -d'|' -f2`

               filesize2=`awk -F '-' -v ft=$filetochk ' {if ( $1 ~ ft ) print $NF}' $filelist1`

                if [[ $filesize1 -eq $filesize2 ]]; then
                        result="Matches"
                else
                        if [[ $filesize2 != "" ]] ; then
                                result="Error:File size Mismatches:$filesize2"

                        else
                                result="Error:File not Transfered"
                        fi
                fi
                printf "\n%-70s %-15s  %-15s"  "$filetochk" "$filesize1" "$result" | tee -a $logfile
        done < $DIR/feedfilelist.txt
    printf "\n======================================================================================================================\n" | tee -a $logfile
}

ytday=`date -d "yesterday" '+%Y%m%d'`
tday=` date '+%Y-%m-%d'`

logfile=$DIR/"feedvalidate_"$tday".log"
echo "Generating Feedfiles Validation Log for Date : $tday"  | tee -a $logfile

> $DIR/tempfile.txt ; > $DIR/feedfilelist.txt
#find /home/cmcsftp/feed_gen/archive | grep $ytday | grep '.dat.gz' > $DIR/tempfile.txt
find /home/cmcsftp/feed_gen/archive -daystart -mtime -1 -type f >  $DIR/tempfile.txt
cnt=`cat $DIR/tempfile.txt | wc -l `

if [ "$cnt" == "0" ]; then
        echo -e "\nNo feedfiles to compare for size for date : $tday" | tee -a $logfile
        exit
else
        while read line || [[ -n "$line" ]]
        do
                FILENAME=` echo $line | awk -F "/" '{print $NF}'`
                FILESIZE=$(stat -c%s "$line")
				FILETIME=$(stat -c%y "$line" | cut -d'.' -f1)
				DATE=$(stat -c%y "$line" | cut -d' ' -f1)
				TIME=$(stat -c%y "$line" | cut -d' ' -f2 |cut -d'.' -f1)

                echo "$FILENAME|$FILESIZE|$FILETIME|$DATE|$TIME "
        done < $DIR/tempfile.txt > $DIR/feedfilelist.txt


        if [ ! -f "$DIR/ee_filelist.txt" ] ; then
                echo "$DIR/ee_filelist.txt from Uploaded Server not Available to compare" |  tee -a $logfile
        else
                compare_file ee_filelist.txt
        fi

        if [ ! -f "$DIR/wrp_filelist.txt" ] ; then
                echo "$DIR/wrp_filelist.txt from Uploaded Server not Available to compare" |  tee -a $logfile
        else
                compare_file wrp_filelist.txt
        fi

fi
########################################################################################################
#>abc12.txt
#>abc123.txt
#cut -d"|" -f 1 feedfilelist.txt >> abc123.txt
#cut -d"_" -f 1-6 abc12.txt >> abc123.txt
mail -s 'D10 Feeds' devansh.rajan@cgi.com < feedfilelist.txt

echo "<html>"  >> /tmp/$$.report
echo "<body>"  >> /tmp/$$.report
#echo "<tr bgcolor=##5119A9 background=cvf_bkg.png><td colspan=1 align=center><b><U>D10 Feeds - date +"%e-%b-%y"</U></b></td></tr>" >> /tmp/$$.report
echo "</br>"  >> /tmp/$$.report
echo "<table border=1 width=50% align="center">"  >> /tmp/$$.report
echo "<tr bgcolor=##05F7D3 background=cvf_bkg.png><td colspan=6 align=center><b><b><U>D10 Feeds for -`date +"%m-%d-%Y"` </U></b></td></tr>" >> /tmp/$$.report
echo "<tr><th>FEEDS</th><th>Frequency</th><th>Generated</th><th>Size</th><th>DATE</th><th>TIME</th><tr>"  >> /tmp/$$.report
while read feed
do
#f1="JM MIS TicketReporting--.csv"
#f2="RA002_Billing_failure_detail_report"
#if [[ $feeds = *"$f1"* ]];
#		then
#			f1="BILLING_NON_REV_TRANSACTIONAL"
#			#echo "$f1"
#			echo "<tr bgcolor=#d3e2e9><td><b>$f1</b></td><td><P ALIGN="center"><b>Daily<b></P ALIGN="Center"></td><td><P ALIGN="center"><b>Yes</font><b></P ALIGN="Center"></td></tr>"  >> /tmp/$$.report
#elif [[ $feeds = *"$f2"* ]];
#		then
#			f2="RA002_BILL_FAILURE"
#			echo "<tr bgcolor=#d3e2e9><td><b>$f2</b></td><td><P ALIGN="center"><b>Daily<b></P ALIGN="Center"></td><td><P ALIGN="center"><b>Yes</font><b></P ALIGN="Center"></td></tr>"  >> /tmp/$$.report
#else
#if [[ $feeds = *"$f1"* ]];
#		then
#			f1="XYZ"
#else
#			f3="NOT"
						ab=`echo $feed |cut -d '|' -f1 `
                        cd=`echo $feed |cut -d "|" -f2 `
                        ef=`echo $feed |cut -d "|" -f3 `
						gh=`echo $feed |cut -d "|" -f4 `
						ij=`echo $feed |cut -d "|" -f5 `
						
			feeds=${ab//[0-9]/}
			feeds=${feeds%.'dat.gz'}
			feeds=${feeds%.'csv.gz'}
			feeds=${feeds%.'CSV.gz'}
			feeds=${feeds%.' CSV'}
			feeds=${feeds%.'--.csv'}
			feeds=${feeds//['_']/ }
			echo "<tr bgcolor=#d3e2e9><td><b>$feeds</b></td><td><P ALIGN="center"><b>Daily<b></P ALIGN="Center"></td><td><P ALIGN="center"><b>Yes</font><b></P ALIGN="Center"></td><td><P ALIGN="center"><b>$cd<b></P ALIGN="Center"></td><td><P ALIGN="center"><b>$gh<b></P ALIGN="Center"></td><td><P ALIGN="center"><b>$ij<b></P ALIGN="Center"></td></tr>"  >> /tmp/$$.report
			
		
done< /tmp/feedfilelist.txt
echo "</table>" >>/tmp/$$.report
echo "</body>"  >> /tmp/$$.report
echo "</html>"  >> /tmp/$$.report
cat /tmp/$$.report > /tmp/Report.html
mailx -s  "$(echo -e " Feeds & Reports For D11 -`date +"%m-%d-%Y"` \nContent-Type: text/html")" devansh.rajan@cgi.com < /tmp/Report.html
rm /tmp/*.report